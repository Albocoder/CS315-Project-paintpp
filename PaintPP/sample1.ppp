//This program creates 4 types of primitive objects (Oval, Rectangle, Line, String) and draws them

var oval = Oval()

var rect = Rect(1)// Rect function takes 0 or 1 as parameters. These are enums for the rounded corners; 0 means corners are not rounded 
//and 1 means corners are rounded. 

var line = Line(NW,2,1) //Line function takes direction of the line, arrows and arrow sizes relative to stroke width as parameters in 
//that order.Each of these are enumerated; meaning that NW means direction in the northwest direction, S means direction in the south 
//direction and so on. Arrows are enumerated as well; 0 means an arrow is present in the starting end, 1 means an arrow is present and 
//the finishing end and 2 means arrows are present at both ends. 1 means that the arrows will be drawn in the same width as stroke 
//width, but for example if this was 2, it would be understood that the arrows would be drawn in the double stroke width. 


var string = "Hello there!"

var loc = Location(12,5)
var size = Size(100,100)
var boundingRect = BoundingRectangle(loc,size)
var strokeWidth = 2
var fillState = TRUE
var color = Color.RED
Draw(oval,boundingRect,strokeWidth,fillState,color)

loc = Location(100,200)
size = Size(50,100)
boundingRect = BoundingRectangle(loc,size)
strokeWidth = 5
fillState = bool(1)
color = Color.GREEN
Draw(rect,boundingRect,strokeWidth,fillState,color)

loc = Location(50,50)
size = Size(1,130)
boundingRect = BoundingRectangle(loc,size)
strokeWidth = 5
color = Color.YELLOW
Draw(line,boundingRect,strokeWidth,color)

loc = Location(75,200)
size = Size(130,500)
boundingRect = BoundingRectangle(loc,size)
color = Color.YELLOW
Draw(string,boundingRect,color)
